from poloniex.base_request.base_request import PoloFuturesBaseRestApi


class UserData(PoloFuturesBaseRestApi):

    def transfer_account(self, amount, bizNo=''):
        """
        The amount to be transferred will be deducted from the Poloniex Account.
        Please ensure that you have sufficient funds in your Poloniex Account, or the transfer will fail.
        Once the transfer arrives your Poloniex Account, the endpoint will respond and return the applyId.
        This ID could be used to cancel the transfer request.

        Param	Type	    Description
        bizNo	String	    A unique ID generated by the user, to ensure the operation is processed by the system only once. You are suggested to use UUID
        amount	BigDecimal	Amount to be transfered out"""

        params = {'amount': amount}
        if not bizNo:
            bizNo = self.return_unique_id[0:23]
        params['bizNo'] = bizNo

        return self._request('POST', '/api/v1/transfer-out', params=params)

    def transfer_account_v2(self, amount, currency, bizNo=''):
        """
        The amount to be transferred will be deducted from the Poloniex Account.
        Please ensure that you have sufficient funds in your Poloniex Account, or the transfer will fail.
        Once the transfer arrives your Poloniex Account, the endpoint will respond and return the applyId.
        This ID could be used to cancel the transfer request.

        Param	    Type	    Description
        bizNo	    String	    A unique ID generated by the user, to ensure the operation is processed by the system only once. You are suggested to use UUID
        amount	    BigDecimal	Amount to be transfered out
        currency	String	    Currency, including XBT,USDT"""

        params = {'amount': amount, 'currency':currency}
        if not bizNo:
            bizNo = self.return_unique_id[0:23]
        params['bizNo'] = bizNo
        return self._request('POST', '/api/v2/transfer-out', params=params)

    def get_Transfer_history(self, currency, **kwargs):
        """
        The data of the first page will be queried by default.

        Param	    Type	Description
        startAt	    long	[Optional] Start time (milisecond)
        endAt	    long	[Optional] End time (milisecond)
        status	    String	[Optional] Status PROCESSING, SUCCESS, FAILURE
        currency	String	Currency, including XBT,USDT"""

        params = {'currency':currency}
        params.update(kwargs)
        return self._request('GET', '/api/v1/transfer-list', params=params)

    def cancel_Transfer_out(self, applyId):
        """
        The transfer-out request could only be canceled under the “PROCESSING” status.

        Param	    Type	Description
        applyId	    String	Transfer ID (Initiate to cancel the transfer-out request)"""

        return self._request('DELETE', '/api/v1/cancel/transfer-out?applyId={}'.format(applyId))

    def get_withdrawal_quota(self, currency):
        """
        Get Withdrawal Limit"""

        params = {'currency': currency}
        return self._request('GET', '/api/v1/withdrawals/quotas', params=params)

    def withdraw(self, currency, address, amount, **kwargs):
        """
        Withdraw Funds

        Param	    Type	    Description
        currency	String	    Currency,including XBT,USDT
        address	    String	    Withdrawal address
        amount	    BigDecimal	Withdrawal amount
        isInner	    boolean 	[Optional] Inner withdrawal or not. If the withdrawal address is an internal address, you can set to False to transfer via blockchain or set to True to withdraw through the inner transfer.
        remark	    String  	[Optional] Remarks
        chain	    String  	[Optional] The chain name of currency, e.g. The available value for USDT are OMNI, ERC20, TRC20, default is OMNI.
        memo	    String  	[Optional] Address remark. If there’s no remark, it is empty. When you withdraw from other platforms to the Poloniex, you need to fill in memo(tag). If you do not fill memo (tag), your deposit may not be available, please be cautious."""

        params = {'currency': currency, 'address': address, 'amount': amount}
        params.update(kwargs)

        return self._request('POST', '/api/v1/withdrawals', params=params)

    def get_withdrawal_list(self, **kwargs):
        """
        Get Withdrawal List

        Param	    Type	Description
        status	    String	[optional] PROCESSING, WALLET_PROCESSING, SUCCESS, FAILURE
        startAt	    long	[optional] Start time (milisecond)
        endAt	    long	[optional] End time (milisecond)
        currency	String	[optional] Currency, including XBT,USDT
        """

        return self._request('GET', '/api/v1/withdrawal-list', params=kwargs)

    def cancel_withdrawal(self, withdrawalId):
        """
        Only withdrawal requests of PROCESSING status could be canceled.

        Param	        Type	Description
        withdrawalId	String	Path Parameter. Withdrawal ID, which is returned after requesting to withdraw funds."""

        return self._request('DELETE', '/api/v1/withdrawals/{withdrawalId}'.format(withdrawalId=withdrawalId))

    def get_deposit_address(self, currency):
        """
        Get Deposit Address"""

        params = {'currency': currency}
        return self._request('GET', '/api/v1/deposit-address', params=params)

    def get_deposit_list(self, **kwargs):
        """
        The system will return the data of the first page by default.

        Param	    Type	Description
        startAt	    long	[Optional] Start time (milisecond)
        endAt	    long	[Optional] End time (milisecond)
        status	    String	[Optional] Status, including PROCESSING, SUCCESS, and FAILURE
        currency	String	[Optional] Currency, including XBT,USDT"""

        return self._request('GET', '/api/v1/deposit-list', params=kwargs)

    def get_account_overview(self, **kwargs):
        """
        Get Account Overview

        Param   	Type	Description
        currency	String	[Optional] Currecny ,including XBT,USDT,Default XBT"""
        return self._request('GET', '/api/v1/account-overview', params=kwargs)

    def get_transaction_history(self, **kwargs):
        """
        If there are open positions, the status of the first page returned will be Pending, indicating the realised profit and loss in the current 8-hour settlement period.
        Please specify the minimum offset number of the current page into the offset field to turn the page.

        Param	    Type	Description
        startAt	    long	[Optional] Start time (milisecond)
        endAt	    long	[Optional] End time (milisecond)
        type	    String	[Optional] Type RealisedPNL-Realised profit and loss, Deposit-Deposit, Withdrawal-withdraw, Transferin-Transfer in, TransferOut-Transfer out
        offset	    long	[Optional] Start offset
        maxCount	long	[Optional] Displayed size per page. The default size is 50
        currency	String	[Optional] Currency of transaction history XBT or USDT"""

        return self._request('GET', '/api/v1/transaction-history', params=kwargs)
